# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy website to Firebase Hosting on merge
on:
  push:
    branches:
      - main
    paths-ignore:
      - 'firebase/functions/**'

env:
  PROJECT_ID: cksc-legislation
  GAR_LOCATION: asia-east1
  SERVICE: cksc-legislation
  REGION: asia-east1

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache packages
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          path: node_modules
      - uses: actions/setup-node@v4
        with:
          # Version Spec of the version to use in SemVer notation.
          # It also admits such aliases as lts, latest, nightly and canary builds
          # Examples: 12.x, 10.15.1, >=10.15.0, lts/Hydrogen, 16-nightly, latest, node
          node-version: '22.x'
          cache: 'npm'
      - run: yarn install --frozen-lockfile
      - run: yarn spa-build
      - run: yarn gcp-build
      - run: mkdir dist/spa/ssr-assets
      - run: mv ./dist/ssr/client/ssr-assets/* ./dist/spa/ssr-assets

      - name: Firebase Hosting Deploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_CKSC_LEGISLATION }}
          channelId: live
          projectId: cksc-legislation
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: access_token
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_CKSC_LEGISLATION }}
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v2'
        with:
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/firebaseapphosting-images/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/firebaseapphosting-images/${{ env.SERVICE }}:${{ github.sha }}"

      - name: Create Service declearation
        run: |-
          export IMAGE="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/firebaseapphosting-images/${{ env.SERVICE }}:${{ github.sha }}"
          export SERVICE="${{ env.SERVICE }}"
          envsubst < ./.apphosting/service.template.yaml > service.yaml

      - name: Deploy to Cloud Run (Firebase App Hosting)
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          metadata: service.yaml

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
